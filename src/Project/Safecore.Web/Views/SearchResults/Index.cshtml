@model IEnumerable<Safecore.Web.Models.SearchResultsModel>

@{
    ViewBag.Title = "SearchResults";
    ViewBag.Searchterm = "aaa";
}

<h2>SearchResults</h2>
@foreach (var item in Model)
{
    <script>
            $('#searchTerm').val('@Html.Raw(item.SearchTitle)');
    </script>

    <span>plain mvc encode</span>  @item.SearchTitle  <br />
    <span>Html. encode</span>  @Html.DisplayFor(modelItem => item.SearchTitle)  <br />
    <span>antixss encode false</span>  @AntiXssEncoder.HtmlEncode(item.SearchTitle, false); <br />
    <span>antixss encode true</span>  @AntiXssEncoder.HtmlEncode(item.SearchTitle, true);
}
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SearchTitle)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Link)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            <h2>
                <script>
                    @*function getUrlVars() {
                        var vars = [], hash;
                        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
                        for (var i = 0; i < hashes.length; i++) {
                            hash = hashes[i].split('=');
                            vars.push(hash[0]);
                            vars[hash[0]] = hash[1];
                        }
                        return vars;
                    }

                    var a = getUrlVars()["q"];                    
                    escape(@item.SearchTitle);
                    document.write(a);*@
                </script>


            </h2>
             <a href="@item.SearchTitle">klik here</a>
            @*<h2>You searched for &quot;<span id="searchTerm">@Html.Raw(item.SearchTitle)</span>&quot;</h2>*@
            @Html.Raw(item.SearchTitle)
            
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Link)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}



</table>
